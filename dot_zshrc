if [ ! -e "$HOME/.zplug" ]; then
    curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
fi
source ~/.zplug/init.zsh

# Manage zplug
zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# Sane defaults from OMZ
zplug "lib/clipboard", from:oh-my-zsh
zplug "lib/key-bindings", from:oh-my-zsh
zplug "lib/completion", from:oh-my-zsh
zplug "lib/compfix", from:oh-my-zsh
zplug "lib/theme-and-appearance", from:oh-my-zsh
zplug "lib/directories", from:oh-my-zsh

### Plugins
zplug "lukechilds/zsh-nvm"
zplug "plugins/git", from:oh-my-zsh
zplug "plugins/sudo", from:oh-my-zsh
zplug "plugins/compleat", from:oh-my-zsh
zplug "plugins/systemd", from:oh-my-zsh, if:"[[ $OSTYPE == linux* ]]"
zplug "plugins/docker", from:oh-my-zsh
zplug "plugins/python", from:oh-my-zsh
zplug "plugins/dnf", from:oh-my-zsh, if:"[[ $OSTYPE == linux* ]]"
zplug "plugins/fzf", from:oh-my-zsh
zplug "plugins/tig", from:oh-my-zsh
zplug "plugins/iterm2", from:oh-my-zsh, if:"[[ $OSTYPE == darwin* ]]"
zplug "plugins/vi-mode", from:oh-my-zsh
# Defer after compinit
zplug "zsh-users/zsh-completions", defer:2
zplug "zsh-users/zsh-syntax-highlighting", defer:2

### Theme
zplug "chriskempson/base16-shell", use:"scripts/base16-onedark.sh", defer:0
zplug "mafredri/zsh-async", from:github
# TODO: use a faster pure-based prompt
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme

# Install plugins if there are plugins that have not been installed
if ! zplug check; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load # --verbose

# User configuration
fpath+=("$HOME/.zsh/completions")
autoload -U compinit; compinit
source $HOME/.aliases

# reclaim Ctrl-S
stty stop undef
# reclaim Ctrl-Q
stty start undef
# Disable Software Flow Control (XON/XOFF flow control)
stty -ixon

# Display fortune
if [ -e "$( which fortune )" ]; then
    echo "" && fortune -s && echo ""
fi

# Vi-mode
# fix sudo plugin
if [ -z "$VIM" ]; then
  bindkey -M vicmd "\e" sudo-command-line
fi
# open in vim
bindkey -M vicmd '^V' edit-command-line
# ctrl-p & ctrl-n to behave like arrow keys
bindkey '^P' up-line-or-beginning-search
bindkey '^N' down-line-or-beginning-search
# empty mode indicator
MODE_INDICATOR=
VI_MODE_SET_CURSOR=true
VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true

# pure prompt
PURE_PROMPT_SYMBOL="›"
PURE_PROMPT_VICMD_SYMBOL="‹"

# dircolors
case "$OSTYPE" in
  *darwin*)
    export LSCOLORS="exfxcxdxbxegedabagacad"
    export CLICOLOR=1
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
    ;;
  *linux*)
    eval "$(dircolors -b)"
    # alias xdg-open to open
    alias open='xdg-open'
    ;;
esac

if [[ -n "$PS1" ]] && [[ -z "$TMUX" ]] && [[ -n "$SSH_CONNECTION" ]] && [[ $(command -v tmux) ]]; then
  (tmux attach-session -t ssh || tmux new-session -s ssh) && exit
fi
