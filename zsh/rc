ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone --depth 1 https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

zinit snippet OMZL::key-bindings.zsh

zinit snippet OMZL::completion.zsh

zinit snippet OMZL::theme-and-appearance.zsh

zinit ice wait lucid depth"1"
zinit light "lukechilds/zsh-nvm"

zinit snippet OMZP::git

zinit ice if"[[ $OSTYPE == linux* ]]" depth"1"
zinit snippet OMZP::systemd

zinit ice if"[[ $OSTYPE == linux* ]]" depth"1"
zinit snippet OMZP::dnf

zinit snippet OMZP::fzf

zinit ice atload"base16_onedark" depth"1"
zinit load "chriskempson/base16-shell"

zinit ice pick"bash/base16-onedark.config" depth"1"
zinit light "tinted-theming/base16-fzf"

zinit ice pick"async.zsh" src"pure.zsh" depth"1" # with zsh-async library that's bundled with it.
zinit light "sindresorhus/pure"

zinit ice wait lucid depth"1"
zinit light "zsh-users/zsh-syntax-highlighting"

# This should be last
zinit ice wait lucid depth"1"
zinit light "zsh-users/zsh-completions"

autoload -Uz compinit && compinit

# User configuration
. "$HOME/.aliases"

# Pass arguments to command if pattern matching fails
# This fixes using carrot (^) in git for example
# https://stackoverflow.com/a/16864766/10913628
setopt NO_NOMATCH

# reclaim Ctrl-S
stty stop undef
# reclaim Ctrl-Q
stty start undef
# Disable Software Flow Control (XON/XOFF flow control)
stty -ixon

# Display fortune
if [ -e "$(which fortune)" ]; then
	echo "" && fortune -s && echo ""
fi

# Vi-mode
bindkey -v
# open command in vim (ctrl-v)
bindkey -M vicmd '^V' edit-command-line
# ctrl-p & ctrl-n to behave like arrow keys
bindkey '^P' up-line-or-beginning-search
bindkey '^N' down-line-or-beginning-search
# allow ctrl-a and ctrl-e to move to beginning/end of line
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line

# pure prompt
PURE_PROMPT_SYMBOL="›"
PURE_PROMPT_VICMD_SYMBOL="‹"

# cli colors
# dircolors
case "$OSTYPE" in
*darwin*)
	export LSCOLORS="exfxcxdxbxegedabagacad"
	export CLICOLOR=1
	# source iTerm2 shell integration
	[ "$TERM_PROGRAM" = "iTerm.app" ] &&
		[ -e "${HOME}/.iterm2_shell_integration.zsh" ] &&
		source "${HOME}/.iterm2_shell_integration.zsh"

	;;
*linux*)
	eval "$(dircolors -b)"
	# alias xdg-open to open
	alias open='xdg-open'
	;;
esac

# direnv
if command -v direnv >/dev/null 2>&1; then
	eval "$(direnv hook zsh)"
fi

# exa (ls replacement)
if command -v exa >/dev/null 2>&1; then
	alias ls="exa"
	alias tree="exa --tree"
fi

# zoxide (smarter cd)
if command -v zoxide >/dev/null 2>&1; then
	eval "$(zoxide init --no-cmd --cmd cd zsh)"
fi

# GPG
# use gpg-agent for ssh
# https://www.gnupg.org/documentation/manuals/gnupg/Agent-Examples.html#Agent-Examples
if command -v gpg >/dev/null 2>&1 && command -v gpgconf >/dev/null 2>&1; then
	unset SSH_AGENT_PID
	if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
		export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
	fi
	export GPG_TTY=$(tty)
fi

# vim: ft=sh
