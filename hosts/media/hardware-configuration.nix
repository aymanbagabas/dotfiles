# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/profiles/qemu-guest.nix") ];

  boot.initrd.availableKernelModules = [
    "uhci_hcd"
    "ehci_pci"
    "ahci"
    "virtio_pci"
    "virtio_scsi"
    "sd_mod"
    "sr_mod"
  ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/mnt/data" = {
    device = "/dev/disk/by-label/media-data";
    fsType = "ext4";
  };

  swapDevices = [{ device = "/dev/vg1/swap"; }];

  fileSystems."/mnt/share/backups" = {
    device = "//nas/backups";
    fsType = "cifs";
    options = [
      # Prevent hanging on network split
      "x-systemd.automount"
      "noauto"
      "x-systemd.idle-timeout=60"
      "x-systemd.device-timeout=5s"
      "x-systemd.mount-timeout=5s"
      # Mount as user
      "uid=1000" # user
      "gid=1" # wheel
      # Credentials need to be stored in a file
      "credentials=/etc/nixos/smb-secrets"
      "rw"
    ];
  };

  fileSystems."/mnt/share/autopirate" = {
    device = "//nas/autopirate";
    fsType = "cifs";
    options = [
      # Prevent hanging on network split
      "x-systemd.automount"
      "noauto"
      "x-systemd.idle-timeout=60"
      "x-systemd.device-timeout=5s"
      "x-systemd.mount-timeout=5s"
      # Mount as user
      "uid=1000" # user
      "gid=1" # wheel
      # Credentials need to be stored in a file
      "credentials=/etc/nixos/smb-secrets"
      "rw"
      "nobrl" # Disable byte-range locks (required for Servarr)
    ];
  };

  # Allow Samba discovery
  # https://nixos.wiki/wiki/Samba#Firewall_configuration
  networking.firewall.extraCommands =
    "iptables -t raw -A OUTPUT -p udp -m udp --dport 137 -j CT --helper netbios-ns";

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp6s18.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
