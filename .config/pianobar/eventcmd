#!/bin/bash

#  if you are using awesome
#  -----
#  function noti(args)
#      naughty.notify(args)
#  end
#  -----
#  add it to your rc.lua

# create variables
while read L; do
	k="`echo "$L" | cut -d '=' -f 1`"
	v="`echo "$L" | cut -d '=' -f 2`"
	export "$k=$v"
done < <(grep -e '^\(title\|artist\|album\|stationName\|songStationName\|pRet\|pRetStr\|wRet\|wRetStr\|songDuration\|songPlayed\|rating\|coverArt\|stationCount\|station[0-9]*\)=' /dev/stdin) # don't overwrite $1...

case "$1" in
	songstart)
		mkdir -p /tmp/pianobar
		echo "$artist\\$title\\$album" > $HOME/.config/pianobar/nowplaying
		wget --output-document="/tmp/pianobar/$artist-$album.png" "$coverArt" -q
		
		# comment this line if you doesn't use awesome
		echo "noti({title = \"pianobar\", text = \"Now playing: '$title' by '$artist'\", timeout = 10, icon = \"/tmp/pianobar/$artist-$album.png\", icon_size = 100})" | awesome-client -
		
		echo -n "" > /tmp/pianobar/station_list
	    for (( c=0; c<$stationCount; c++ ))
	    do
	      stationName=$(eval "echo \${$(echo station${c})"-''})
	      echo "$c ## $stationName" >> /tmp/pianobar/station_list
	    done

		if [ "$rating" -eq 1 ]
		then
			notify-send -t 10000 "pianobar" "'$title' by '$artist' on '$album' - LOVED"
		else
			notify-send -t 10000 "pianobar" "'$title' by '$artist' on '$album'"
		fi
		# or whatever you like...
		;;
		
	songmove)
		echo "$songPlayed-$songDuration-$rating" > $HOME/.config/pianobar/song
		;;

	songfinish)
	    # scrobble if 75% of song have been played, but only if the song hasn't
	    # been banned
	   if [ -n "$songDuration" ] && [ "$songDuration" -ne 0 ] &&
	      [ $(echo "scale=4; ($songPlayed/$songDuration*100)>98" | bc) -eq 1 ] &&
	      [ "$rating" -eq 1 ]; then
	      # scrobbler-helper is part of the Audio::Scrobble package at cpan
	      # "pia" is the last.fm client identifier of "pianobar", don't use
	      # it for anything else, please
	      
	      scrobbler-helper -P pia -V 1.0 "$title" "$artist" "$album" "" "" "" "$((songDuration/1000))" &
	      `rm "/tmp/pianobar/$artist-$album.png"`
		echo "$songPlayed-$songDuration-$rating" > $HOME/.config/pianobar/song
	   fi
	
	   ;;
	
	songlove)
		notify-send -t 10000 "pianobar" "LOVING '$title' by '$artist' on '$album' on station '$stationName'"
		;;

	songshelf)
		notify-send -t 10000 "pianobar" "SHELVING '$title' by '$artist' on '$album' on station '$stationName'"
		;;

	songban)
		notify-send -t 10000 "pianobar" "BANNING '$title' by '$artist' on '$album' on station '$stationName'"
		;;

	songbookmark)
		notify-send -t 10000 "pianobar" "BOOKMARKING '$title' by '$artist' on '$album'"
		;;

	artistbookmark)
		notify-send -t 10000 "pianobar" "BOOKMARKING '$artist'"
		;;

	*)
		if [ "$pRet" -ne 1 ]; then
			notify-send -t 10000 "pianobar" "$1 failed: $pRetStr"
		elif [ "$wRet" -ne 1 ]; then
			notify-send -t 10000 "pianobar" "$1 failed: Network error: $wRetStr"
		fi
		;;
esac

